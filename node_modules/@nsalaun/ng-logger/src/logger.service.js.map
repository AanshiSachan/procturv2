{"version":3,"sources":["logger.service.ts"],"names":[],"mappings":"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","file":"logger.service.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Noémi Salaün All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/noemi-salaun/ng-logger/blob/master/LICENSE\n */\n\nimport {Injectable, OpaqueToken, Inject} from \"@angular/core\";\nimport {Level} from \"./level.enum\";\n\n/**\n * Created by Noémi Salaün on 09/17/2016.\n */\n\n/**\n * The token to provide the log {@link Level}.\n */\nexport const LOGGER_LEVEL = new OpaqueToken('LoggerLevel');\n\n/**\n * A logger service that provide the same functions as {@link console}.\n * The logger is binded to the console, so the Web Console shows the correct file and line number of the original call.\n */\n\nexport class Logger {\n\n    /**\n     * Outputs a message to the Web Console.\n     * @param message A JavaScript string containing zero or more substitution strings.\n     * @param optionalParams A list of JavaScript objects to output OR JavaScript objects with which to replace substitution strings within message.\n     */\n    log: (message?: any, ...optionalParams: any[]) => void;\n\n    /**\n     * Outputs a debugging message to the Web Console.\n     * @param message A JavaScript string containing zero or more substitution strings.\n     * @param optionalParams A list of JavaScript objects to output OR JavaScript objects with which to replace substitution strings within message.\n     */\n    debug: (message?: any, ...optionalParams: any[]) => void;\n\n    /**\n     * Outputs an informational message to the Web Console.\n     * @param message A JavaScript string containing zero or more substitution strings.\n     * @param optionalParams A list of JavaScript objects to output OR JavaScript objects with which to replace substitution strings within message.\n     */\n    info: (message?: any, ...optionalParams: any[]) => void;\n\n    /**\n     * Outputs a warning message to the Web Console.\n     * @param message A JavaScript string containing zero or more substitution strings.\n     * @param optionalParams A list of JavaScript objects to output OR JavaScript objects with which to replace substitution strings within message.\n     */\n    warn: (message?: any, ...optionalParams: any[]) => void;\n\n    /**\n     * Outputs an error message to the Web Console.\n     * @param message A JavaScript string containing zero or more substitution strings.\n     * @param optionalParams A list of JavaScript objects to output OR JavaScript objects with which to replace substitution strings within message.\n     */\n    error: (message?: any, ...optionalParams: any[]) => void;\n\n    /**\n     * Creates a new inline group in the Web Console log.\n     * @param groupTitle An optional title for the group.\n     */\n    group: (groupTitle?: string) => void;\n\n    /**\n     * Creates a new inline group in the Web Console log that is initially collapsed.\n     * @param groupTitle An optional title for the group.\n     */\n    groupCollapsed: (groupTitle?: string) => void;\n\n    /**\n     * Exits the current inline group in the Web Console.\n     */\n    groupEnd: () => void;\n\n    /**\n     * Starts a timer you can use to track how long an operation takes. It works only with log {@link Level} equal or higher than DEBUG.\n     * @param timerName The name to give the new timer. This will identify the timer.\n     */\n    time: (timerName?: string) => void;\n\n    /**\n     * Stops a timer that was previously started by calling {@link Logger.time}. It works only with log {@link Level} equal or higher than DEBUG.\n     * @param timerName The name of the timer to stop. Once stopped, the elapsed time is automatically displayed in the Web Console.\n     */\n    timeEnd: (timerName?: string) => void;\n\n    /**\n     * The log level.\n     */\n    private _level: Level;\n\n    /**\n     * Returns the log level.\n     */\n    get level(): Level {\n        return this._level;\n    }\n\n    constructor( level: Level) {\n\n        this._level = level;\n\n        // console.log\n        if (this._level >= Level.LOG && console && console.log) {\n            this.log = console.log.bind(console);\n        } else {\n            this.log = () => {\n            };\n        }\n\n        // console.debug\n        if (this._level >= Level.DEBUG && console && console.debug) {\n            this.debug = console.debug.bind(console);\n        } else {\n            this.debug = () => {\n            };\n        }\n\n        // console.info\n        if (this._level >= Level.INFO && console && console.info) {\n            this.info = console.info.bind(console);\n        } else {\n            this.info = () => {\n            };\n        }\n\n        // console.warn\n        if (this._level >= Level.WARN && console && console.warn) {\n            this.warn = console.warn.bind(console);\n        } else {\n            this.warn = () => {\n            };\n        }\n\n        // console.error\n        if (this._level >= Level.ERROR && console && console.error) {\n            this.error = console.error.bind(console);\n        } else {\n            this.error = () => {\n            };\n        }\n\n        // console.group\n        if (this._level > Level.OFF && console && console.group) {\n            this.group = console.group.bind(console);\n        } else {\n            this.group = () => {\n            };\n        }\n\n        // console.groupCollapsed\n        if (this._level > Level.OFF && console && console.groupCollapsed) {\n            this.groupCollapsed = console.groupCollapsed.bind(console);\n        } else {\n            this.groupCollapsed = () => {\n            };\n        }\n\n        // console.groupEnd\n        if (this._level > Level.OFF && console && console.groupEnd) {\n            this.groupEnd = console.groupEnd.bind(console);\n        } else {\n            this.groupEnd = () => {\n            };\n        }\n\n        // console.time\n        if (this._level >= Level.DEBUG && console && console.time) {\n            this.time = console.time.bind(console);\n        } else {\n            this.time = () => {\n            };\n        }\n\n        // console.timeEnd\n        if (this._level >= Level.DEBUG && console && console.timeEnd) {\n            this.timeEnd = console.timeEnd.bind(console);\n        } else {\n            this.timeEnd = () => {\n            };\n        }\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Level, decorators: [{ type: Inject, args: [LOGGER_LEVEL, ] }, ]},\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}